# Generated by Django 4.2.7 on 2023-12-29 09:33

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Verification',
            fields=[
                ('company_email', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('otp', models.IntegerField()),
                ('license_key', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.CharField(max_length=8, primary_key=True, serialize=False, unique=True)),
                ('company_mail', models.EmailField(max_length=50, unique=True)),
                ('company_name', models.CharField(default=True, max_length=100, unique=True)),
                ('password', models.CharField(max_length=100, null=True)),
                ('category', models.CharField(choices=[('INSURANCE', 'Insurance'), ('HR', 'HR'), ('HOSPITALS', 'Hospitals')], max_length=30, null=True)),
                ('no_of_employees', models.CharField(choices=[('Below_100', 'Below_100'), ('Below_200', 'Below_200'), ('Below_300', 'Below_300')], max_length=10, null=True)),
                ('address', models.CharField(max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
